Use mavenmovies;
-- Basic Aggregate Funcation
-- Question 1:Retrieve the total number of rentals made in the Sakila database. 
select*from rental;
select count(rental_id) as Number_of_rentals from rental;
-- or
select count(distinct rental_id) as Number_of_rentals from rental;
-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database.
select*from rental;
select Avg(datediff(return_date,rental_date)) as Average_duration from rental;

-- String function
-- Question 3:Display the first name and last name of customers in uppercase.
select * from customer;
select upper(first_name) as first_name , upper(last_name) as last_name from customer;
-- Question 4:Extract the month from the rental date and display it alongside the rental ID.
select rental_id, month(rental_date) from rental;

-- Group by
-- Question 5:Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select*from payment;
select count(rental_id) as Count_of_rentals, customer_id from payment group by customer_id;
-- Question 6: Find the total revenue generated by each store.
select sum(amount), store.store_id from payment inner join staff on payment.staff_id=staff.staff_id inner join store on store.store_id=staff.store_id group by store.store_id;


-- Question 7 : Display the title of the movie, customer's first name, and last name who rented it.
select*from film;
SELECT 
    title, first_name, last_name
FROM
    film
        INNER JOIN
    inventory ON film.film_id = inventory.film_id
        INNER JOIN
    rental ON inventory.inventory_id = rental.inventory_id
        INNER JOIN
    customer ON customer.customer_id = rental.customer_id;

-- Question 8: Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
select * from film;
SELECT 
    first_name, last_name, film.title
FROM
    actor
        INNER JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        INNER JOIN
    film ON film.film_id = film_actor.film_id
WHERE
    film.title = 'Gone with the Wind';
    
-- Group by
-- Question 1: Determine the total number of rentals for each category of movies;
select*from film;
select*from rental;
select*from film_category;
select count(rental_id) , film_category.category_id from rental inner join inventory on rental.inventory_id=inventory.inventory_id inner join film on inventory.film_id=film.film_id inner join film_category on film_category.film_id=film.film_id group by film_category.category_id;

-- Question Question 2: Find the average rental rate of movies in each language.
select*from film;
select avg(rental_rate) as Average_rental_rate , language.name from film inner join language on language.language_id=film.language_id group by language.name;


-- Joins

-- Question 3: Retrieve the customer names along with the total amount they've spent on rentals.
select concat(first_name," ",last_name) as Customer_name , customer.customer_id, sum(amount) as total_spent from customer inner join payment on payment.customer_id=customer.customer_id inner join rental on rental.customer_id=payment.customer_id group by Customer_id order by customer_id asc;
-- or 
select sum(amount) as total_spent, concat(first_name," ",last_name) as Customer_name , customer.customer_id from payment inner join customer on payment.customer_id=customer.customer_id inner join rental on rental.customer_id=customer.customer_id group by Customer_id order by customer_id asc;


-- Question 4:List the titles of movies rented by each customer in a particular city (e.g., 'London').
select * from city;
SELECT 
    title
FROM
    film
        INNER JOIN
    inventory AS i ON film.film_id = i.film_id
        INNER JOIN
    rental AS r ON i.inventory_id = r.inventory_id
        INNER JOIN
    customer AS c ON r.customer_id = c.customer_id
        INNER JOIN
    address AS a ON a.address_id = c.address_id
        INNER JOIN
    city as t ON t.city_id = a.city_id group by a.city_id;

-- Question 5: Display the top 5 rented movies along with the number of times they've been rented.
SELECT 
    title, COUNT(rental_id) AS count_of_rental
FROM
    film AS f
        INNER JOIN
    inventory AS i ON f.film_id = i.film_id
        INNER JOIN
    rental AS r ON i.inventory_id = r.inventory_id
GROUP BY title
ORDER BY count_of_rental DESC
LIMIT 5;

-- Question 6: Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
select*from inventory;
select*from customer;
select*from rental order by customer_id limit 33;
select count(rental_id) , customer_id from rental group by customer_id;
SELECT 
    CONCAT(first_name, ' ', last_name)  AS Customer_name , customer_id
FROM
    customer AS c
        INNER JOIN
    inventory AS i ON c.store_id = i.store_id
        INNER JOIN
    rental AS r ON i.inventory_id = r.inventory_id
    where c.store_id in (1,2)
GROUP BY customer_id having count(distinct c.store_id)=2;

SELECT 
    CONCAT(first_name, ' ', last_name) AS Customer_name,
    c.customer_id
FROM
    customer c
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    store s ON i.store_id = s.store_id
WHERE
    s.store_id IN (1 , 2)
GROUP BY c.customer_id , c.first_name , c.last_name
HAVING COUNT(DISTINCT s.store_id) = 2;